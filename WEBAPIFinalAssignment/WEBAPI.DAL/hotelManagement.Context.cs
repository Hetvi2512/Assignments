//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEBAPI.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class hotelManagementEntity : DbContext
    {
        public hotelManagementEntity()
            : base("name=hotelManagementEntity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<hotel> hotels { get; set; }
        public virtual DbSet<Room> Rooms { get; set; }
        public virtual DbSet<booking> bookings { get; set; }
    
        public virtual int ins_hotel(string hotel_name, string address, string city, Nullable<int> pinCode, string number, string person, string website, string fb, string twitter, Nullable<bool> isActive, string createdBy, string updatedBy)
        {
            var hotel_nameParameter = hotel_name != null ?
                new ObjectParameter("Hotel_name", hotel_name) :
                new ObjectParameter("Hotel_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("pinCode", pinCode) :
                new ObjectParameter("pinCode", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            var personParameter = person != null ?
                new ObjectParameter("person", person) :
                new ObjectParameter("person", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var fbParameter = fb != null ?
                new ObjectParameter("fb", fb) :
                new ObjectParameter("fb", typeof(string));
    
            var twitterParameter = twitter != null ?
                new ObjectParameter("twitter", twitter) :
                new ObjectParameter("twitter", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("updatedBy", updatedBy) :
                new ObjectParameter("updatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_hotel", hotel_nameParameter, addressParameter, cityParameter, pinCodeParameter, numberParameter, personParameter, websiteParameter, fbParameter, twitterParameter, isActiveParameter, createdByParameter, updatedByParameter);
        }
    
        public virtual int ins_room(Nullable<int> hotelId, string roomname, string category, Nullable<int> price, Nullable<bool> isActive, string createdBy, string updatedBy)
        {
            var hotelIdParameter = hotelId.HasValue ?
                new ObjectParameter("hotelId", hotelId) :
                new ObjectParameter("hotelId", typeof(int));
    
            var roomnameParameter = roomname != null ?
                new ObjectParameter("Roomname", roomname) :
                new ObjectParameter("Roomname", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("isActive", isActive) :
                new ObjectParameter("isActive", typeof(bool));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(string));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("updatedBy", updatedBy) :
                new ObjectParameter("updatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ins_room", hotelIdParameter, roomnameParameter, categoryParameter, priceParameter, isActiveParameter, createdByParameter, updatedByParameter);
        }
    
        public virtual ObjectResult<selectHotel_Result> selectHotel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectHotel_Result>("selectHotel");
        }
    
        public virtual int selectHotelwithRoom(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("selectHotelwithRoom", idParameter);
        }
    
        public virtual ObjectResult<selectRoom_Result> selectRoom()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoom_Result>("selectRoom");
        }
    
        public virtual ObjectResult<selectRoomByCity_Result> selectRoomByCity(string city)
        {
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoomByCity_Result>("selectRoomByCity", cityParameter);
        }
    
        public virtual int postBooking(Nullable<int> roomid, Nullable<System.DateTime> bookingdate, string status)
        {
            var roomidParameter = roomid.HasValue ?
                new ObjectParameter("roomid", roomid) :
                new ObjectParameter("roomid", typeof(int));
    
            var bookingdateParameter = bookingdate.HasValue ?
                new ObjectParameter("Bookingdate", bookingdate) :
                new ObjectParameter("Bookingdate", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("postBooking", roomidParameter, bookingdateParameter, statusParameter);
        }
    
        public virtual ObjectResult<selectRoomByPincode_Result> selectRoomByPincode(Nullable<int> pincode)
        {
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRoomByPincode_Result>("selectRoomByPincode", pincodeParameter);
        }
    }
}
